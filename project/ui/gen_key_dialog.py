# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dia.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from os import getcwd
from os.path import isdir,dirname
from Key_gen import generate_key_rsa,generate_key_marca
from time import sleep
class Ui_Dialog(QtWidgets.QDialog):
    def __init__(self, Parent):
        super().__init__(Parent)
        self.resize(518, 271)
        self.setWindowFlag(QtCore.Qt.MSWindowsFixedSizeDialogHint, True)
        self.setMaximumSize(QtCore.QSize(518, 263))
        self.okBtn = QtWidgets.QPushButton(self)
        self.cancelBtn = QtWidgets.QPushButton(self)
        self.okBtn.setGeometry(QtCore.QRect(320, 220, 88, 34))
        self.cancelBtn.setGeometry(QtCore.QRect(420, 220, 88, 34))
        self.okBtn.setObjectName("okBtn")
        self.cancelBtn.setObjectName('cancelBtn')
        self.verticalLayoutWidget = QtWidgets.QWidget(self)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 80, 501, 121))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.stackedWidget = QtWidgets.QStackedWidget(self.verticalLayoutWidget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.comboBox_5 = QtWidgets.QComboBox(self.page_5)
        self.comboBox_5.setGeometry(QtCore.QRect(60, 10, 131, 32))
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.lineEdit_14 = QtWidgets.QLineEdit(self.page_5)
        self.lineEdit_14.setGeometry(QtCore.QRect(60, 80, 281, 32))
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.label_15 = QtWidgets.QLabel(self.page_5)
        self.label_15.setGeometry(QtCore.QRect(0, 90, 58, 18))
        self.label_15.setObjectName("label_15")
        self.toolButton_7 = QtWidgets.QPushButton(self.page_5)
        self.toolButton_7.setGeometry(QtCore.QRect(350, 80, 33, 31))
        self.toolButton_7.setObjectName("toolButton_7")
        self.stackedWidget.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.lineEdit_15 = QtWidgets.QLineEdit(self.page_6)
        self.lineEdit_15.setGeometry(QtCore.QRect(60, 70, 281, 32))
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.label_16 = QtWidgets.QLabel(self.page_6)
        self.label_16.setGeometry(QtCore.QRect(0, 80, 58, 18))
        self.label_16.setObjectName("label_16")
        self.toolButton_8 = QtWidgets.QPushButton(self.page_6)
        self.toolButton_8.setGeometry(QtCore.QRect(350, 70, 33, 31))
        self.toolButton_8.setObjectName("toolButton_8")
        self.stackedWidget.addWidget(self.page_6)
        self.verticalLayout.addWidget(self.stackedWidget)
        self.comboBox = QtWidgets.QComboBox(self)
        self.comboBox.setGeometry(QtCore.QRect(70, 30, 131, 32))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(20, 40, 41, 18))
        self.label.setObjectName("label")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/folde.png"))
        self.toolButton_7.setIcon(icon)
        self.toolButton_8.setIcon(icon)
        self.retranslateUi()
        #self.buttonBox.accepted.connect(self.accept)
        #self.buttonBox.rejected.connect(self.reject)
        QtCore.QMetaObject.connectSlotsByName(self)
        self.setModal(True)
    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("generate key", "generate key"))
        self.comboBox_5.setItemText(0, _translate("self", "1024"))
        self.comboBox_5.setItemText(1, _translate("self", "2048"))
        self.comboBox_5.setItemText(2, _translate("self", "4096"))
        self.label_15.setText(_translate("self", "key file"))
        self.label_16.setText(_translate("self", "key file"))
        self.comboBox.setItemText(0, _translate("self", "RSA"))
        self.comboBox.setItemText(1, _translate("self", "MARCA"))
        self.label.setText(_translate("self", "Mode"))
        self.okBtn.setText(_translate('self','Ok'))
        self.cancelBtn.setText(_translate('self','cancel'))
        self.comboBox.currentIndexChanged.connect(self.change_page)
        self.cancelBtn.clicked.connect(self.close)
        self.okBtn.clicked.connect(self.action)
        self.toolButton_7.clicked.connect(self.toolAction)
        self.toolButton_8.clicked.connect(self.toolAction)
    def toolAction(self):
        if self.stackedWidget.currentIndex() == 0:
            fileMode = QtWidgets.QFileDialog(self)
            #fileMode.setFilter(QtWidgets.QFileDialog.DirectoryOnly)

            file = fileMode.getExistingDirectory(caption='Save key file',)
            if file:
                self.lineEdit_14.setText(file)
        elif self.stackedWidget.currentIndex() == 1:
            file = QtWidgets.QFileDialog.getSaveFileName(self,caption='Save key file', directory=getcwd(),filter='key file (*.mkey)')
            if file[0]:
                self.lineEdit_15.setText(file[0])
    def action(self):

        check = [1024,2048,4096]
        if self.stackedWidget.currentIndex() == 0:
            if self.lineEdit_14:
              if isdir(self.lineEdit_14.text()):
                generate_key_rsa(check[self.comboBox_5.currentIndex()],self.lineEdit_14.text())
                sleep(2)
                self.close()
              else:
                  msg = QtWidgets.QMessageBox(self)
                  msg.setText("Path is empty or not valid")
                  msg.setWindowTitle("path error")
                  msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                  msg.buttonClicked.connect(msg.close)
                  msg.setModal(True)
                  msg.show()

        elif self.stackedWidget.currentIndex() == 1:
            if self.lineEdit_15:
              if isdir(dirname(self.lineEdit_15.text())):
                generate_key_marca(self.lineEdit_15.text())
                sleep(2)
                self.close()
              else:
                  msg = QtWidgets.QMessageBox(self)
                  msg.setText("Path is empty or not valid")
                  msg.setWindowTitle("path error")
                  msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                  msg.buttonClicked.connect(msg.close)
                  msg.setModal(True)
                  msg.show()
    def change_page(self):
        self.stackedWidget.setCurrentIndex(self.comboBox.currentIndex())
